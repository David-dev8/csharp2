<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Quiz_Royale">
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
    <local:InverseBooleanToVisibilityConverter x:Key="InverseVisibilityConverter" />
    <SolidColorBrush x:Key="BackgroundColor" Color="#DAD9D9" />
    <SolidColorBrush x:Key="PrimaryAccentColor" Color="#76A99F" />
    <SolidColorBrush x:Key="SecondaryAccentColor" Color="#85ABB5" />
    <SolidColorBrush x:Key="WarningColor" Color="#D0342C" />
    <Style x:Key="Title" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style x:Key="SubTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style x:Key="Caption" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="DetailsHeader" TargetType="TextBlock" BasedOn="{StaticResource Caption}">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    <Style TargetType="Image">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
    </Style>
    <Style x:Key="Box" TargetType="Border">
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="BorderThickness" Value="4" />
        <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
        <Setter Property="Margin" Value="20" />
    </Style>
    <Style TargetType="DockPanel">
        <Setter Property="LastChildFill" Value="False" />
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10, 5" />
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="Hover" TargetType="FrameworkElement">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.85" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource Hover}">
        <Setter Property="Background" Value="{StaticResource SecondaryAccentColor}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="4" Padding="10, 5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HeaderBox" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource PrimaryAccentColor}" />
        <Setter Property="Padding" Value="15, 12" />
        <Setter Property="CornerRadius" Value="3" />
        <Style.Resources>
            <Style TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Style.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource Title}">
                        <Setter Property="Margin" Value="20,0" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="Option" TargetType="Button" BasedOn="{StaticResource Hover}">
        <Setter Property="Background" Value="{StaticResource SecondaryAccentColor}" />
        <Setter Property="Margin" Value="0,10" />
        <Setter Property="Padding" Value="15,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="6" Padding="10, 5">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Style.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Margin" Value="4, 6" />
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource SubTitle}">
                        <Setter Property="Margin" Value="10,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="Transparent" BorderThickness="0.5" BorderBrush="Black" CornerRadius="4"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="4" RadiusY="4">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>